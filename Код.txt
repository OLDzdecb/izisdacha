1.	SELECT model, speed, hd
FROM PC
WHERE price<500
2.	SELECT maker
FROM product
WHERE product.type= 'printer'
GROUP BY maker
3.	SELECT model, ram, screen
FROM laptop
WHERE price>1000
4.	Select * 
FROM printer
WHERE color= 'y'
5.	SELECT model,speed, hd
FROM PC
WHERE (cd='12x' or cd ='24x') and price<600
6.	SELECT DISTINCT p.maker, l.speed
FROM laptop l
JOIN product p ON p.model = l.model
WHERE l.hd >= 10
7.	SELECT DISTINCT product.model, pc.price
FROM Product JOIN pc ON product.model=pc.model 
WHERE maker='B'
UNION
SELECT DISTINCT product.model, laptop.price
FROM product JOIN laptop ON product.model=laptop.model 
WHERE maker='B'
UNION
SELECT DISTINCT product.model, printer.price
FROM product JOIN printer ON product.model=printer.model 
WHERE maker='B'


8.	SELECT maker 
FROM product 
WHERE type='PC' and maker not in (SELECT maker FROM product where type = 'Laptop')
GROUP BY maker

9.	SELECT Distinct product.maker
FROM pc
INNER JOIN product ON pc.model = product.model
WHERE pc.speed>= 450
10.	SELECT model, price
FROM Printer
WHERE price= (SELECT MAX(price) FROM printer)
11.	SELECT AVG(speed)
FROM PC
12.	SELECT AVG(speed)
FROM laptop
WHERE price>1000
13.	SELECT AVG(SPEED)
FROM pc
INNER JOIN product on pc.model= product.model 
WHERE maker = 'A'   
GROUP BY maker
14.	Select Classes.class, Ships.name, Classes.country
from Ships 
INNER JOIN Classes
on Ships.class = Classes.class
WHERE Classes.numGuns > = 10
15.	SELECT hd
FROM PC
GROUP BY(hd)
HAVING COUNT(model)>=2
16.	SELECT DISTINCT B.model AS model, A.model AS model, A.speed, A.ram 
FROM PC AS A, PC B 
WHERE A.speed=B.speed AND A.ram=B.ram and A.model<B.model
17.	SELECT Distinct p.type,p.model,l.speed
FROM laptop l
join product p on l.model=p.model
WHERE l.speed<(SELECT min(speed)from pc)
18.	SELECT DISTINCT maker,price  
FROM printer 
INNER JOIN product ON printer.model= product.model  
WHERE price = (SELECT min(price)FROM printer where color = 'y' ) and color = 'y'
19.	SELECT maker ,avg(screen)as Avg_screen
FROM laptop
INNER join product on laptop.model =  product.model
GROUP BY maker
20.	SELECT maker , count(model) as Count_Model 
FROM product 
WHERE type = 'pc' 
Group by maker having count(model)>=3
21.	SELECT maker , max(price)as Max_price 
FROM pc INNER join product on pc.model= product.model  
GROUP BY maker
22.	SELECT speed , avg(price) as Avg_price 
FROM pc  
WHERE speed > 600 
Group by speed
23.	SELECT DISTINCT maker
FROM product t1 JOIN pc t2 ON t1.model=t2.model
WHERE speed>=750 AND maker IN
(SELECT maker FROM product t1 JOIN laptop t2 ON t1.model=t2.model
WHERE speed>=750 )
24.	SELECT model FROM( 
SELECT DISTINCT model, price FROM laptop WHERE laptop.price = (SELECT MAX(price) FROM laptop)  
UNION 
SELECT DISTINCT model, price FROM pc WHERE pc.price = (SELECT MAX(price) FROM pc)  
UNION 
SELECT DISTINCT model, price FROM printer WHERE printer.price = (SELECT MAX(price) FROM printer)  
) as t 
WHERE t.price=(SELECT MAX(price) FROM ( 
SELECT DISTINCT price FROM laptop WHERE laptop.price = (SELECT MAX(price) FROM laptop)  
UNION 
SELECT DISTINCT price FROM pc WHERE pc.price = (SELECT MAX(price) FROM pc)  
UNION 
SELECT DISTINCT price FROM printer WHERE printer.price = (SELECT MAX(price) FROM printer)  
) as t1 )
25.	SELECT distinct product.maker 
FROM product 
WHERE product.type='Printer'  
INTERSECT 
SELECT DISTINCT product.maker 
FROM product INNER JOIN pc ON pc.model=product.model  
WHERE product.type='PC' AND pc.ram=(SELECT MIN(ram)FROM pc)  
AND pc.speed = (SELECT MAX(speed) FROM (SELECT distinct speed
FROM pc 
WHERE pc.ram=(SELECT MIN(ram) FROM pc)) as t)
26.	SELECT sum(s.price)/sum(s.kol) as SR_PRICE FROM
(SELECT price,1 as kol FROM pc,product
WHERE pc.model=product.model AND product.maker='A'
UNION all
SELECT price,1 as kol FROM laptop,product
WHERE laptop.model=product.model AND product.maker='A') as s
27.	SELECT maker,avg(hd)  
FROM product INNER Join pc on product.model=pc.model   
where maker in(select maker  FROM
product  WHERE type='printer')  
GROUP BY maker

28.	SELECT count(maker)
FROM product
WHERE maker in
(SELECT maker from product
GROUP BY maker
having count(model) = 1 )
29.	SELECT t.point, t.date, SUM(t.inc), sum(t.out) from( select point, date, inc, null as out from Income_o  
Union
SELECT point, date, null as inc, Outcome_o.out from Outcome_o) as t GROUP BY t.point, t.date
30.	SELECT point, date, SUM(sum_out), SUM(sum_inc) 
FROM( select point, date, SUM(inc) as sum_inc, null as sum_out 
FROM Income Group by point, date  
Union
SELECT point, date, null as sum_inc, SUM(out) as sum_out 
FROM Outcome Group by point, date ) as t  
GROUP BY point, date order by point
31.	SELECT DISTINCT class, country
FROM classes
WHERE bore >= 16
32.	SELECT country, cast(avg((power(bore,3)/2)) as numeric(6,2)) as weight
FROM (select country, classes.class, bore, name FROM classes left join ships on classes.class=ships.class
UNION all
SELECT distinct country, class, bore, ship 
FROM classes t1 left join outcomes t2 on t1.class=t2.ship
WHERE ship=class and ship not in (select name from ships) ) a
WHERE name IS NOT NULL 
GROUP BY country
33.	SELECT o.ship FROM
BATTLES b
LEFT join outcomes o ON o.battle = b.name
WHERE b.name = 'North Atlantic' AND o.result = 'sunk'
34.	SELECT name 
FROM classes,ships 
WHERE launched >=1922 and displacement>35000 and type='bb' and
ships.class = classes.class
35.	SELECT model, type 
FROM product 
WHERE model NOT LIKE '%[^0-9]%' OR model NOT LIKE '%[^a-z]%'
36.	SELECT name  
FROM ships  
WHERE class = name   
UNION  
SELECT ship as name  
FROM classes,outcomes  
WHERE classes.class = outcomes.ship



37.	SELECT class  
FROM(SELECT name,class FROM ships  
UNION  
SELECT class as name,class  
FROM classes,outcomes  
WHERE classes.class=outcomes.ship) A   
GROUP BY class  having count(A.name)=1
38.	SELECT distinct country  
FROM classes  
WHERE type='bb'   
intersect  
SELECT distinct country  
FROM classes  
WHERE type='bc'
39.	SELECT distinct ccc.sh 
FROM( SELECT aaa.ship as sh, aaa.[date] as d1, bbb.[date] as d2 FROM ( 
SELECT ship, [date] 
FROM outcomes as o INNER join battles as b on o.battle=b.name WHERE result = 'damaged') as aaa 
INNER JOIN (select ship,  
[date] 
FROM outcomes as o INNER JOIN battles as b on o.battle=b.name) as bbb on aaa.ship=bbb.ship 
WHERE bbb.date>aaa.date) as ccc
40.	SELECT maker ,type 
FROM Product 
WHERE maker in (SELECT maker  
FROM (SELECT maker,type FROM Product GROUP BY maker,type ) x  
GROUP BY maker having count(*)=1 )  
GROUP BY maker,type having count(*)>1
41.	SELECT p.maker,
CASE WHEN MAX(CASE WHEN d.price IS NULL THEN 1 ELSE 0 END) = 0 THEN MAX(d.price)
END
FROM product p
INNER join (
SELECT distinct model, price FROM pc
UNION
SELECT distinct model, price FROM laptop
UNION
SELECT distinct model, price FROM printer
) d on d.model = p.model
GROUP BY p.maker
having count(p.maker) > 0
42.	SELECT ship,battle 
FROM outcomes 
WHERE result ='sunk'
43.	SELECT name 
FROM battles 
WHERE DATEPART(yy, date) not in (select DATEPART(yy, date)  
FROM battles JOIN ships on DATEPART(yy, date)=launched)

44.	SELECT name 
FROM ships 
WHERE name like 'R%'   
UNION   
SELECT name 
FROM battles 
WHERE name like 'R%'   
UNION   
SELECT ship 
FROM outcomes 
WHERE ship like 'R%'
45.	SELECT name 
FROM ships 
WHERE name like '% % %'  
UNION 
SELECT ship 
FROM outcomes 
WHERE ship like '% % %'
46.	SELECT name as n, displacement as d, numguns as ng FROM ships INNER JOIN classes on ships.class=classes.class 
WHERE name in (SELECT ship FROM outcomes WHERE battle = 'Guadalcanal')   
UNION
SELECT ship as n, displacement as d, numguns as ng FROM outcomes INNER JOIN classes on outcomes.ship=classes.class 
WHERE battle = 'Guadalcanal' and ship not in (SELECT name FROM ships)   
UNION
SELECT ship as n, null as d, null as ng FROM outcomes 
WHERE battle = 'Guadalcanal' and ship not in (SELECT name FROM ships) and ship not in  (SELECT class FROM classes)
47.	WITH T1 AS (SELECT COUNT(name) as co, country
FROM(SELECT name, country FROM Classes
INNER JOIN Ships ON Ships.class = Classes.class
UNION
SELECT ship, country
FROM Classes INNER JOIN Outcomes ON Outcomes.ship=Classes.class) FR1
GROUP BY country),
T2 AS (SELECT COUNT(name) as co, country
FROM (SELECT name, country FROM Classes
INNER JOIN Ships ON Ships.class = Classes.class
WHERE name IN (SELECT DISTINCT ship
FROM Outcomes WHERE result LIKE 'sunk')
UNION
SELECT ship, country
FROM Classes
INNER JOIN Outcomes ON Outcomes.ship=Classes.class
WHERE ship IN (SELECT DISTINCT ship
FROM Outcomes WHERE result LIKE 'sunk')
)FR2 GROUP BY country)
SELECT T1.country FROM T1
INNER JOIN T2 ON T1.co=t2.co and t1.country=t2.country
48.	SELECT class as n FROM ships 
WHERE name in(SELECT ship FROM outcomes 
WHERE result='sunk')   
UNION
SELECT ship as n FROM outcomes  
WHERE ship not in(SELECT name FROM ships) and ship in(SELECT class FROM classes) and result='sunk'
49.	SELECT name 
FROM ships 
WHERE class in(SELECT class 
FROM classes 
WHERE bore=16)   
UNION
SELECT ship 
FROM outcomes 
WHERE ship in(SELECT class 
FROM classes
WHERE bore=16)
50.	SELECT distinct battle 
FROM Classes 
INNER JOIN Ships ON ships.class=classes.class   
INNER JOIN Outcomes ON Classes.class=Outcomes.ship or Ships.name=Outcomes.ship   
WHERE classes.class='Kongo'
51.	SELECT NAME 
FROM(SELECT name as NAME, displacement, numguns  
FROM ships INNER join classes on ships.class = classes.class 
UNION 
SELECT ship as NAME, displacement, numguns from outcomes inner join classes on outcomes.ship= classes.class) as d1 inner join (SELECT displacement, max(numGuns) as numguns from ( SELECT displacement, numguns from ships inner join classes on ships.class = classes.class  
UNION 
SELECT displacement, numguns  from outcomes inner join classes on outcomes.ship= classes.class) as f 
GROUP by displacement) as d2 on d1.displacement=d2.displacement and d1.numguns =d2.numguns
52.	SELECT DISTINCT s.name
FROM ships s
JOIN classes c ON c.class = s.class
WHERE UPPER(c.country)='JAPAN'
and (numguns>=9 or numguns is NULL)
AND (c.bore<19 OR c.bore IS NULL)
AND (displacement<=65000 OR c.displacement IS NULL)
AND c.type='bb'
53.	SELECT cast(avg(numguns*1.0) as numeric(4,2)) as Avg_numGuns  
FROM classes 
WHERE type='bb'
54.	SELECT CAST(AVG(numguns*1.0) AS NUMERIC (4,2)) as AVG_nmg 
FROM (SELECT ship, type, numguns 
FROM Outcomes LEFT JOIN Classes ON ship = class  
UNION  
SELECT name, type, numguns 
FROM Ships as S INNER JOIN  Classes as C ON c.class = s.class) AS T 
WHERE type = 'bb'
55.	SELECT C.class, min(launched)  
FROM ships as S right join classes as C on s.class=c.class 
GROUP BY C.class
56.	SELECT classes.class, count(T.ship) 
FROM classes left join(select ship, class 
FROM outcomes left join ships on ship=name where result='sunk'
UNION 
SELECT ship, class 
FROM outcomes left join classes on ship=class where result='sunk') as T on classes.class=T.class
GROUP BY classes.class
57.	SELECT class as cls, count(class) as sunked 
FROM( 
SELECT C.class, O.ship from classes as C join outcomes as O on C.class=O.ship where O.result='sunk' 
UNION 
SELECT S.class, O.ship from outcomes as O join ships as S on S.name=O.ship where O.result='sunk') as T 
WHERE class in ( select distinct X.class from  (select C.class, O.ship from classes as C join outcomes as O on C.class=O.ship 
UNION 
SELECT C.class, S.name from classes as C join ships as S on C.class=S.class) as X GROUP BY X.class 
having count(X.class)>=3 )  
GROUP BY class
58.	SELECT main_maker ,main_type ,CONVERT(NUMERIC(6,2),((sub_num*100.00)/(total_num*100.00)*100.00))  
FROM (SELECT count(p5.model) total_num ,p5.maker main_maker 
FROM product p5 group by p5.maker) p6 JOIN (select p3.maker sub_maker ,p3.type main_type ,count(p4.model) sub_num 
FROM (SELECT p1.maker maker, p2.type type from product p1 cross join product p2 GROUP BY p1.maker, p2.type) p3 left join product p4 on p3.maker = p4.maker and p3.type = p4.type 
GROUP BY  p3.maker,p3.type) p7 ON p7.sub_maker = p6.main_maker
59.	SELECT a.point, case when o is null then i else i-o end remain 
FROM (SELECT point, sum(inc) as i 
FROM Income_o group by point) as A left join (select point, sum(out) as o 
FROM Outcome_o group by point) as B on A.point=B.point
60.	SELECT c1, c2-(CASE
WHEN o2 is null THEN 0
ELSE o2 END)
FROM
(SELECT point c1, sum(inc) c2 FROM income_o
WHERE date<'2001-04-15'
GROUP by point) as t1
left join
(SELECT point o1, sum(out) o2 FROM outcome_o
WHERE date<'2001-04-15'
GROUP by point) as t2
on c1=o1

61.	SELECT sum(i) 
FROM (SELECT point, sum(inc) as i 
FROM income_o
GROUP BY point
UNION
SELECT point, -sum(out) as i 
FROM outcome_o
GROUP BY point
) as t
62.	SELECT
(SELECT sum(inc) FROM income_o 
WHERE '20010415' > date)   
-  
(SELECT sum(out) FROM outcome_o 
WHERE '20010415' > date)  as remain
63.	SELECT name 
FROM Passenger 
WHERE ID_psg in(Select Left([ol],CHARINDEX ( ' ', ol)) 
FROM (SELECT CAST(concat(ID_psg,' ', place) AS VARCHAR(30)) as ol, trip_no as o, ID_psg as psg 
FROM Pass_in_trip ) as lll 
GROUP BY ol having count(o)>1)
64.	SELECT income.point, income.date, 'inc' as operation, sum(income.inc) 
FROM income left join outcome on income.point=outcome.point and income.date=outcome.date 
WHERE outcome.date is null  group by income.point, income.date 
UNION 
SELECT outcome.point, outcome.date, 'out' as operation, sum(outcome.out) 
FROM income right join outcome on income.point=outcome.point and income.date=outcome.date 
WHERE income.date is null group by outcome.point, outcome.date
65.	SELECT row_number() over(ORDER BY maker) as num,
CASE WHEN mnum=1 THEN maker ELSE ''
END as maker,type
FROM (
SELECT row_number() over(partition by maker ORDER BY maker, ord)
AS mnum,maker,type
FROM (
SELECT DISTINCT maker, type,
CASE WHEN LOWER(type)='pc' then 1
WHEN LOWER(type)='laptop' then 2 ELSE 3
END as ord
FROM product
) as mto
) as mtn




66.	SELECT date, max(c) FROM
(SELECT date,count(*) AS c 
FROM Trip,
(SELECT trip_no,date FROM Pass_in_trip WHERE date>='2003-04-01' 
AND date<='2003-04-07' GROUP BY trip_no, date) AS t1
WHERE Trip.trip_no=t1.trip_no AND town_from='Rostov'
GROUP BY date
UNION ALL
SELECT '2003-04-01',0
UNION ALL
SELECT '2003-04-02',0
UNION ALL
SELECT '2003-04-03',0
UNION ALL
SELECT '2003-04-04',0
UNION ALL
SELECT '2003-04-05',0
UNION ALL
SELECT '2003-04-06',0
UNION ALL
SELECT '2003-04-07',0) AS t2
GROUP BY date
67.	SELECT count(*) 
FROM
(SELECT TOP 1 WITH TIES count(*) c, town_from, town_to from trip
GROUP BY town_from, town_to
ORDER by c desc) as t
68.	SELECT count(*) 
FROM (SELECT TOP 1 WITH TIES sum(c) cc, c1, c2 FROM (
SELECT count(*) c, town_from c1, town_to c2 FROM trip
WHERE town_from>=town_to
GROUP BY town_from, town_to
UNION all
SELECT count(*) c,town_to, town_from from trip
WHERE town_to>town_from
GROUP BY town_from, town_to
) as t
GROUP BY c1,c2
ORDER BY cc desc
) as tt

69.	WITH op as(
SELECT point,[date],Inc AS sm
FROM Income
UNION ALL
SELECT point,[date],-Out
FROM Outcome)
SELECT point, convert(char(25),[date],103) AS [date],
(SELECT SUM(sm)
FROM op
WHERE op.[date]<=o1.[date] and op.point=o1.point) as rem
FROM op as o1
GROUP BY point,[date]

70.	SELECT DISTINCT o.battle
FROM outcomes o
LEFT JOIN ships s ON s.name = o.ship
LEFT JOIN classes c ON o.ship = c.class 
OR s.class = c.class
WHERE c.country IS NOT NULL
GROUP BY c.country, o.battle
HAVING COUNT(o.ship)>=3

71.	SELECT p.maker 
FROM product p 
WHERE p.type='pc' 
GROUP by p.maker having count(DISTINCT p.model)=(SELECT count(DISTINCT pc.model) FROM pc 
WHERE pc.model in (SELECT DISTINCT pr.model FROM product pr 
WHERE pr.maker=p.maker ))

72.	SELECT TOP 1 WITH TIES name, c3 
FROM passenger
JOIN
(SELECT c1, max(c3) c3 from
(
SELECT pass_in_trip.ID_psg c1, Trip.ID_comp c2, count(*) c3 FROM pass_in_trip
join trip on trip.trip_no=pass_in_trip.trip_no
GROUP BY pass_in_trip.ID_psg, Trip.ID_comp
) as t
GROUP BY c1
having count(*)=1) as tt
on ID_psg=c1
ORDER BY c3 desc

73.	WITH sh AS (
SELECT class, name
FROM ships
UNION
SELECT ship, ship
FROM outcomes), cc as (
SELECT name, country, battle
FROM Classes c LEFT JOIN sh on c.class=sh.class
JOIN outcomes o on sh.name=o.ship)
SELECT DISTINCT c.country, b.name
FROM classes c, battles b
WHERE (
SELECT count(cc.country) 
FROM cc
WHERE cc.country=c.country AND cc.battle=b.name)=0
74.	SELECT c.country, c.class 
FROM classes c 
WHERE c.country like (case when  (SELECT count(*) 
FROM classes c 
WHERE c.country='Russia' 
GROUP BY c.country) is not null THEN ('Russia') else ('%') end)

75.	Н



76.	WITH cte AS
(SELECT ROW_NUMBER() OVER (PARTITION BY ps.ID_psg,pit.place ORDER BY pit.date) AS rowNumber,DATEDIFF (minute, time_out, DATEADD(DAY,IIF(time_in<time_out,1,0),time_in))AS timeFlight, ps.Id_psg, ps.name
FROM Pass_in_trip pit LEFT JOIN trip tr ON pit.trip_no = tr.trip_no
LEFT JOIN Passenger ps ON ps.ID_psg=pit.ID_psg -- Все рейсы
)
SELECT MAX(cte.name),SUM(timeFlight)FROM cte
GROUP BY cte.ID_psg
HAVING MAX(rowNumber)=1

77.	WITH t as (SELECT count (distinct trip.trip_no) as Qty, date
FROM trip INNER join pass_in_trip on trip.trip_no=pass_in_trip.trip_no
WHERE town_from='Rostov' GROUP by date)
SELECT *
FROM t
WHERE Qty=(SELECT max(Qty) FROM t)
78.	SELECT name,
REPLACE(CONVERT(CHAR(12), DATEADD(m, DATEDIFF(m,0,date),0), 102),'.','-') 
AS first_day,
REPLACE(CONVERT(CHAR(12), DATEADD(s,-1,DATEADD(m,DATEDIFF(m,0,date)+1,0)), 102),'.','-') 
AS last_day
FROM Battles
79.	SELECT Passenger.name, A.minutes
FROM (SELECT P.ID_psg,
SUM((DATEDIFF(minute, time_out, time_in) + 1440)%1440) AS minutes,
MAX(SUM((DATEDIFF(minute, time_out, time_in) + 1440)%1440)) OVER()AS MaxMinutes
FROM Pass_in_trip P JOIN
Trip AS T ON P.trip_no = T.trip_no
GROUP BY P.ID_psg) AS A JOIN
 Passenger ON Passenger.ID_psg = A.ID_psg
WHERE A.minutes=A.MaxMinutes

80.	SELECT DISTINCT maker
FROM product
WHERE maker NOT IN (
SELECT maker
FROM product
WHERE type='PC' AND model NOT IN
(SELECT model
FROM PC))

81.	SELECT O.*
FROM outcome O
INNER JOIN
(SELECT TOP 1 WITH TIES YEAR(date)AS Y, MONTH(date)AS M, SUM(out)AS ALL_TOTAL
FROM outcome
GROUP BY YEAR(date),MONTH(date)
ORDER BY ALL_TOTAL DESC
)R ON YEAR(O.date)=R.Y AND MONTH(O.date)=R.M

82.	WITH CTE(code,price,number)
AS
(SELECT PC.code,PC.price,number=ROW_NUMBER() OVER (ORDER BY PC.code)
FROM PC)
SELECT CTE.code,AVG(C.price)
FROM CTE
JOIN CTE C ON (C.number-CTE.number)<6 AND (C.number-CTE.number)>=0
GROUP BY CTE.number,CTE.code
HAVING COUNT(CTE.number)=6

83.	SELECT name
FROM Ships AS s JOIN Classes AS cl1 ON s.class = cl1.class
WHERE
CASE WHEN numGuns=8 THEN 1 ELSE 0 END +
CASE WHEN bore=15 THEN 1 ELSE 0 END +
CASE WHEN displacement=32000 THEN 1 ELSE 0 END +
CASE WHEN type='bb' THEN 1 ELSE 0 END +
CASE WHEN launched=1915 THEN 1 ELSE 0 END +
CASE WHEN s.class='Kongo' THEN 1 ELSE 0 END +
CASE WHEN country='USA' THEN 1 ELSE 0 END>= 4

84.	SELECT C.name, A.N_1_10, A.N_11_21, A.N_21_30
FROM (SELECT T.ID_comp,
SUM(CASE WHEN DAY(P.date)<11 THEN 1 ELSE 0 END) AS N_1_10,
SUM(CASE WHEN (DAY(P.date)>10 AND DAY(P.date)<21) THEN 1 ELSE 0 END) AS N_11_21,
SUM(CASE WHEN DAY(P.date)>20 THEN 1 ELSE 0 END) AS N_21_30
FROM Trip AS T JOIN
Pass_in_trip AS P ON T.trip_no=P.trip_no AND CONVERT(char(6),P.date, 112)= '200304'
GROUP BY T.ID_comp) AS A JOIN
Company AS C ON A.ID_comp = C.ID_comp
85.	SELECT maker
FROM product
GROUP BY maker
HAVING COUNT(distinct type) = 1 AND (min(type)='pc'
AND count(model) > 2)OR min(type)='printer'



86.	SELECT maker,
CASE count(distinct type)when 2 then MIN(type) + '/' + MAX(type)
WHEN 1 then MAX(type)
WHEN 3 then 'Laptop/PC/Printer' 
END
FROM Product
GROUP BY maker

87.	SELECT DISTINCT name,COUNT(town_to) Qty
FROM Trip tr JOIN Pass_in_trip pit ON tr.trip_no=pit.trip_no JOIN
Passenger psg ON pit.ID_psg = psg.ID_psg
WHERE town_to='Moscow' AND pit.ID_psg NOT IN(SELECT DISTINCT ID_psg
FROM Trip tr JOIN Pass_in_trip pit ON tr.trip_no = pit.trip_no
WHERE date+time_out=(SELECT MIN (date+time_out)
FROM Trip tr1 JOIN Pass_in_trip pit1 ON tr1.trip_no = pit1.trip_no
WHERE pit.ID_psg = pit1.ID_psg)
AND town_from='Moscow')
GROUP BY pit.ID_psg,name
HAVING COUNT(town_to)>1

88.	SELECT
(SELECT name FROM Passenger WHERE ID_psg = B.ID_psg) AS name,
B.trip_Qty,
(SELECT name FROM Company WHERE ID_comp = B.ID_comp)AS Company
FROM (SELECT P.ID_psg, MIN(T.ID_comp) AS ID_comp, COUNT(*) AS trip_Qty, MAX(COUNT(*)) OVER() AS Max_Qty
FROM Pass_in_trip AS P JOIN
Trip AS T ON P.trip_no = T.trip_no
GROUP BY P.ID_psg
HAVING MIN(T.ID_comp) = MAX(T.ID_comp)
) 
AS B
WHERE B.trip_Qty=B.Max_Qty

89.	SELECT maker, count(maker)
FROM product
GROUP BY maker having count(maker) in (
SELECT max(D.cnt)
FROM (SELECT maker, count(maker) as cnt
FROM PRODUCT
GROUP BY maker ) as D
UNION 
SELECT min(F.cnt)
FROM (SELECT maker, count(maker) as cnt FROM product GROUP BY MAKER) AS f )
90.	SELECT t1.maker, t1.model, t1.type
FROM (
SELECT row_number() over (ORDER BY model) p1, row_number() over (ORDER BY model
desc) p2, *
FROM product) t1
WHERE p1>3 AND p2>3
91.	SELECT CAST(COALESCE(A,0)*1.0/B*1.0 as numeric(6,2))
FROM
(SELECT SUM(B_VOL) A FROM utB) x,
(SELECT COUNT(*) B FROM utQ) y

92.	SELECT Q_NAME
FROM utQ
WHERE Q_ID in (SELECT DISTINCT B.B_Q_ID
FROM (SELECT B_Q_ID
FROM utB
GROUP BY B_Q_ID
HAVING SUM(B_VOL)=765) AS B
WHERE B.B_Q_ID NOT IN (SELECT B_Q_ID
FROM utB
WHERE B_V_ID IN (SELECT B_V_ID
FROM utB
GROUP BY B_V_ID
HAVING SUM(B_VOL)<255)))

93.	SELECT c.name, sum(vr.vr)
FROM
(SELECT distinct t.id_comp, pt.trip_no,pt.date,t.time_out,t.time_in,--pt.id_psg,
case
WHEN DATEDIFF(mi, t.time_out,t.time_in)> 0 THEN DATEDIFF(mi, t.time_out,t.time_in)
WHEN DATEDIFF(mi, t.time_out,t.time_in)<=0 THEN DATEDIFF(mi, t.time_out,t.time_in+1)
end vr
FROM pass_in_trip pt left join trip t on pt.trip_no=t.trip_no
) vr left join company c on vr.id_comp=c.id_comp
GROUP BY c.name
94.	SELECT DATEADD(Day, S.num, D.date) AS Dt,
(SELECT COUNT(DISTINCT P.trip_no)
FROM Pass_in_trip P
JOIN Trip T
ON P.trip_no = T.trip_no
AND T.town_from = 'Rostov'
AND P.date = DATEADD(day, S.Num, D.date)) AS Qty
FROM (SELECT (3 * ( x - 1 ) + y - 1) AS Num
FROM (SELECT 1 AS x UNION ALL SELECT 2 UNION ALL SELECT 3) AS N1
CROSS JOIN (SELECT 1 AS y UNION ALL SELECT 2 UNION ALL SELECT 3) AS N2
WHERE (3*(X-1)+ y) <8) AS S,
(SELECT MIN(A.date) AS date
FROM (SELECT P.date,
COUNT(DISTINCT P.trip_no) AS Qty,
MAX(COUNT(DISTINCT P.trip_no)) OVER() AS M_Qty
FROM Pass_in_trip AS P
JOIN Trip AS T
ON P.trip_no = T.trip_no
AND T.town_from = 'Rostov'
GROUP BY P.date) AS A
WHERE A.QTY= A.M_QTY) AS D
95.	SELECT name,
COUNT(DISTINCT CONVERT(CHAR(24),date)+CONVERT(CHAR(4),Trip.trip_no)),
COUNT(DISTINCT plane),
COUNT(DISTINCT ID_psg),
COUNT(*)
FROM Company,Pass_in_trip, Trip
WHERE Company.ID_comp= Trip.ID_comp and Trip.trip_no=Pass_in_trip.trip_no
GROUP BY Company.ID_comp,name

96.	WITH r as (SELECT v.v_name,
v.v_id,
count(case WHEN v_color = 'R' then 1 end) over(partition by v_id) cnt_r,
count(case WHEN v_color = 'B' then 1 end) over(partition by b_q_id) cnt_b
FROM utV v JOIN utB b on v.v_id = b.b_v_id)
SELECT v_name
FROM r
WHERE cnt_r>1
and cnt_b>0
GROUP BY v_name

97.	SELECT code, speed, ram, price, screen
FROM laptop
WHERE exists (
SELECT 1 x
FROM (SELECT v, rank()over(ORDER BY v) rn
FROM ( SELECT cast(speed as float) sp, cast(ram as float) rm,
cast(price as float) pr, cast(screen as float) sc
)l unpivot(v for c in (sp, rm, pr, sc))u
)l pivot(max(v) for rn in ([1],[2],[3],[4]))p
WHERE [1]*2 <= [2] and [2]*2 <= [3] and [3]*2 <= [4]
)

98.	WITH CTE AS
(SELECT 
1 n, cast (0 as varchar(16)) bit_or,
code, speed, ram FROM PC
UNION ALL
SELECT n*2,
cast (convert(bit,(speed|ram)&n) as varchar(1))+cast(bit_or as varchar(15))
, code, speed, ram
FROM CTE 
WHERE N< 65536 
)
SELECT code,speed, ram 
FROM cte
WHERE n= 65536
and CHARINDEX('1111', bit_or)>0



99.	WITH d1 AS (
SELECT inco.point, inco.[date], inco.[date] dw
FROM dbo.Income_o inco
UNION ALL
SELECT d2.point, d2.[date], dateadd(day, 1, d2.[dw])
FROM d1 d2
WHERE d2.[dw] in (
SELECT ou.[date]
FROM dbo.Outcome_o ou 
WHERE ou.[point] = d2.[point]) OR
(1 + (datepart(dw, d2.[dw])+@@datefirst + 5) % 7) = 7)
SELECT [point],[date]as [DP],max([dw])as [DI]
FROM d1
GROUP BY d1.point,d1.[date]
ORDER BY d1.point,DP

100.	SELECT distinct A.date, A.R, B.Point, B.inc, C.point, C.out
From (SELECT DIStINCT date, ROW_Number() OVER(PARTITION BY date 
ORDER BY code asc) as R 
FROM Income
UNION
SELECT DISTINCT date,ROW_Number() OVER(PARTITION BY date ORDER BY code asc) 
FROM Outcome) A
LEFT JOIN (SELECT date, point, inc
, ROW_Number() OVER(PARTITION BY date ORDER BY code asc) as RI 
FROM Income
) B on B.date=A.date and B.RI=A.R
LEFT JOIN (
SELECT date, point, out,
ROW_Number() OVER(PARTITION BY date ORDER BY code asc) as RO FROM Outcome
) C on C.date=A.date and C.RO=A.R

101.	SELECT code, model, color, type, price,
MAX(model)OVER(PARTITION BY Grp)max_model,
MAX(CASE type WHEN'Laser'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)+
MAX(CASE type WHEN'Matrix'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)+
MAX(CASE type WHEN'Jet'THEN 1 ELSE 0 END)OVER(PARTITION BY Grp)distinct_types,
AVG(price) OVER(PARTITION BY grp)
FROM (
SELECT *,
CASE color WHEN'n'THEN 0 ELSE ROW_NUMBER()OVER(Order By code)END+
CASE color WHEN'n'THEN 1 ELSE-1 END*ROW_NUMBER()OVER(PARTITION BY color Order By code)Grp
FROM Printer
) T

102.	SELECT name 
FROM passenger
WHERE id_psg in
(
SELECT id_psg from trip t,pass_in_trip pit
WHERE t.trip_no=pit.trip_no
GROUP By id_psg
having count(distinct case when town_from<=town_to then town_from+town_to else town_to+town_from end)=1
)


103.	SELECT min(t.trip_no) ,min(tt.trip_no), min(ttt.trip_no), max(t.trip_no), max(tt.trip_no),max(ttt.trip_no)
FROM trip t, trip tt, trip ttt
WHERE tt.trip_no > t.trip_no and ttt.trip_no > tt.trip_no




104.	Н




105.	SELECT maker, model, row_number() over(ORDER BY maker, model) as Alice,
dense_rank() over(ORDER BY maker) as Bella, rank() over(ORDER BY maker) as Vika,
count(*) over(ORDER BY maker) as Galina
FROM Product

106.	with a as(
SELECT *,row_number()over(ORDER By b_datetime,b_q_id,b_v_id) n FROM utb)
SELECT b_datetime,b_q_id,b_v_id,b_vol,
cast(exp(sm1)/exp(sm2) as numeric(12,8))k
FROM a x
cross apply
(SELECT sum( iif(n%2<> 0,log(b_vol),0)) sm1,sum( iif(n%2=0,log(b_vol),0)) sm2 FROM a WHERE n<=x.n)y

107.	SELECT name, trip_no, date
FROM(
SELECT row_number() over(order by date+time_out,ID_psg) rn,name,Trip.trip_no,date
FROM Company,Pass_in_trip,Trip
WHERE Company.ID_comp=Trip.ID_comp and Trip.trip_no=Pass_in_trip.trip_no
and town_from='Rostov' and year(date)=2003 and month(date)=4)_
WHERE rn=5
108.	SELECT DISTINCT b1.B_VOL, b2.b_vol, b3.b_vol 
FROM utb b1, utb b2, utb b3
WHERE b1.B_VOL < b2.B_VOL AND b2.B_VOL < b3.B_VOL
AND NOT ( b3.B_VOL > SQRT( SQUARE(b1.B_VOL)+SQUARE(b2.B_VOL)))
109.	SELECT A.Q_NAME AS q_name,
A.Whites AS Whites,
A.Cnt - A.Whites AS Blacks
FROM (SELECT Q.Q_ID,
Q.Q_NAME,
(SUM(SUM(B.B_VOL)) OVER())/765 AS Whites,
COUNT(*) OVER() AS Cnt
FROM utQ AS Q
LEFT JOIN utB AS B
ON Q.Q_ID = B.B_Q_ID
GROUP BY Q.Q_ID,
Q.Q_NAME
HAVING SUM(B.B_VOL) = 765
OR SUM(B.B_VOL) IS NULL) AS A

110.	SELECt name 
FROM passenger 
WHERE id_psg in
(SELECT id_psg
FROM pass_in_trip pit 
JOIN trip t on pit.trip_no = t.trip_no
WHERE time_in < time_out and datepart(dw, date) = 7
 )



111.	Н
112.	Н



113.	SELECT sum(255-ISNULL ([R],0) ) R , sum(255-isnull([G],0)) G, sum(255-isnull([B],0)) B
FROM
(
/*merging all tables to find paint filling and color for all squares*/
select ISNULL(B_Q_ID, Q_ID) ID, V_COLOR, B_VOL Vol from
utB RIGHT JOIN utQ on B_Q_ID=Q_ID
LEFT JOIN utV on B_V_ID=V_ID
) as SourceT
PIVOT
(
/*rotating table and calculating each paint volume for each square*/
SUM(Vol) For V_COLOR IN ([R], [G], [B])
) Pvt
/*excluding white squares*/
where ISNULL ([R],0) + isnull([G],0) + isnull([B],0) <765








114.	WITH b AS
(SELECT ID_psg, COUNT(*) as cnt FROM Pass_In_Trip GROUP BY ID_psg, place),
b1 AS
(SELECT DISTINCT ID_psg, cnt FROM b WHERE cnt =(SELECT MAX(cnt) FROM b))
SELECT name, cnt FROM b1 JOIN Passenger p ON (b1.ID_psg = p.ID_psg)

115.	SELECT distinct Up=u.b_vol, Down=d.b_vol, Side=s.b_vol,
Rad=cast(POWER((POWER(s.b_vol,2)-POWER((1.*d.b_vol-1.*u.b_vol)/2,2)),1./2.)/2 as dec(15,2))
  FROM utB u, utB d, utB s
  WHERE u.b_vol<d.b_vol and 1.*u.b_vol+1.*d.b_vol=2.*s.b_vol

116.	SELECT MIN(D)start, MAX(D)finish
FROM
(SELECT D, SUM(F)OVER(ORDER BY D ROWS UNBOUNDED PRECEDING)F
FROM(
SELECT B_DATETIME D, IIF(IsNull(DATEDIFF(second, LAG(B_DATETIME)OVER(ORDER BY B_DATETIME), B_DATETIME),0)<=1,0,1)F
FROM utB
)q
)q
GROUP BY F
HAVING DATEDIFF(second,MIN(D),MAX(D))> 0

117.	SELECT top 1 with ties country, x, n
FROM classes
cross apply(values(numguns*5000,'numguns'),(bore*3000,'bore'),(displacement,'displacement'))V(x,n)
GROUP BY country, x, n
ORDER BY rank()over(partition by country order by x desc)

118.	SELECT name, convert(char(10),date,120) as battle_dt
,convert(char(10),MIN(Dateadd(dd,1,dt)),120) as election_dt
FROM
(SELECT name, date, Dateadd(yy,p,Dateadd(dd,n,Dateadd(mm,3,dateadd(yy,datediff(yy,0,date),0)))) as dt
FROM Battles
,(values(0),(1),(2),(3),(4),(5),(6),(7),(8)) T(p)
,(values(0),(1),(2),(3),(4),(5),(6)) W(n) ) X
WHERE date<=dt and (Year(dt)%4=0 and Year(dt)%100> 0 or Year(dt)%400=0)
and DATEPART(dw,dt)=DATEPART(dw,'20140106')
GROUP BY name, date

119.	SELECT FORMAT(B_DATETIME, 'yyyy'),
SUM(B_VOL)
FROM utB
GROUP BY FORMAT(B_DATETIME, 'yyyy')
HAVING COUNT(DISTINCT B_DATETIME) > 10
UNION all
SELECT FORMAT(B_DATETIME, 'yyyy-MM'),
SUM(B_VOL)
FROM utB
GROUP BY FORMAT(B_DATETIME, 'yyyy-MM')
HAVING COUNT(DISTINCT B_DATETIME) > 10
UNION all
SELECT FORMAT(B_DATETIME, 'yyyy-MM-dd'),
SUM(B_VOL)
FROM utB
GROUP BY FORMAT(B_DATETIME, 'yyyy-MM-dd')
HAVING COUNT(DISTINCT B_DATETIME) > 10






120.	With t as
(SELECT ID_comp, convert(numeric(18,2), Case when time_in > = time_out
Then datediff(minute, time_out, time_in)
ELSE datediff(minute, time_out, dateadd(day, 1, time_in))
End) as trmin
FROM (Select trip_no
 FROM Pass_in_trip
 GROUP BY trip_no, [date]) pt join Trip t on pt.trip_no = t.trip_no
)

SELECT Coalesce(c.name, 'TOTAL'), A_mean, G_mean, Q_mean, H_mean
FROM (
 SELECT Id_comp ,
  convert(numeric(18,2), avg(trmin)) A_mean,
  convert(numeric(18,2), Exp(avg(Log(trmin)))) G_mean,
  convert(numeric(18,2), sqrt(avg(trmin*trmin))) Q_mean,
  convert(numeric(18,2), count(*)/sum(1/trmin)) H_mean
 FROM t
 GROUP By ID_comp
 with cube) as a left join Company c on a.ID_comp = c.ID_comp

121.	SELECT name
FROM dbo.Ships
WHERE launched < 1941
UNION
SELECT ship
FROM dbo.Outcomes
JOIN dbo.Battles on name = battle
WHERE date < '19410101'
UNION
SELECT ship
FROM dbo.Outcomes
WHERE ship in (
SELECT class
FROM dbo.Ships
WHERE launched < 1941)
UNION
SELECT ship
FROM dbo.Outcomes
WHERE ship in (
SELECT class
FROM dbo.Ships
JOIN dbo.Outcomes on Ships.name = Outcomes.ship
JOIN dbo.Battles on Battles.name = Outcomes.battle
WHERE date < '19410101')
UNION
SELECT name
FROM dbo.Ships
WHERE name in (
SELECT class
FROM dbo.Ships
WHERE launched < 1941)
UNION
SELECT name
FROM dbo.Ships
WHERE name in (
SELECT class
FROM dbo.Ships
JOIN dbo.Outcomes on Ships.name = ship
JOIN dbo.Battles on Battles.name = battle
WHERE date < '19410101')

122.	WITH cta AS (
SELECT ID_psg,town_from,town_to,date+time_out as date_out,
min(date+time_out) over (partition by dbo.Pass_in_trip.ID_psg) mnd,
max(date+time_out) over (partition by dbo.Pass_in_trip.ID_psg) mxd
FROM dbo.Pass_in_trip join dbo.Trip on Trip.trip_no=Pass_in_trip.trip_no)
SELECT dbo.Passenger.name, jta.b_town
FROM (
SELECT cta.ID_psg, cta.town_from as b_town
FROM cta where cta.date_out=cta.mnd) jta join (
SELECT cta.ID_psg, cta.town_to as c_town
FROM cta where cta.date_out=cta.mxd) jtb on jtb.ID_psg=jta.ID_psg
JOIN dbo.Passenger on Passenger.ID_psg=jta.ID_psg
WHERE jta.b_town <> jtb.c_town

123.	WITH dsM1 AS
(SELECT model, price
FROM PC
UNION ALL
SELECT model, price
FROM Laptop
UNION ALL
SELECT model, price
FROM Printer ), dsP AS (
SELECT p.maker, dsM1.price, p.model
FROM Product p left join dsM1 on dsM1.model = p.model ), dsPrice AS (
SELECT maker, (
SELECT IIF(COUNT(dsP1.price)-1>0,1,0)
FROM dsP dsP1
WHERE dsP1.price = dsP.price and dsP1.maker = dsP.maker ) c, price
FROM dsP )
SELECT maker, sum(c), COUNT(DISTINCT iif(c>0,price,null))
FROM dsPrice
GROUP BY maker

124.	with [cte]
as (select [ID_psg], [ID_comp], max(count(*)) over (partition by [ID_psg]) as [mxctc],
min(count(*)) over (partition by [ID_psg]) as [mnctc], count(*) over (partition by [ID_psg]) as
[cc]
from [dbo].[Pass_in_trip]
join [dbo].[Trip] on [Trip].[trip_no] = [Pass_in_trip].[trip_no]
group by [ID_psg], [ID_comp])
select [name]
from [dbo].[Passenger]
join [cte] on [cte].[ID_psg] = [Passenger].[ID_psg]
where [cte].[mxctc] = [cte].[mnctc] and [cte].[cc] >= 2
group by [Passenger].[ID_psg], [name]

125.	WITH dsP AS 
(SELECT 
code, 'Laptop' type, model, price, 
IIF(code<=(SELECT COUNT(*) FROM Laptop)/2, 
ROW_NUMBER() OVER (ORDER BY code)*2-1, 
ROW_NUMBER() OVER (ORDER BY code DESC)*2 
) num 
FROM Laptop 
UNION 
SELECT code,'PC' type, model, price, 
IIF(code<=(SELECT COUNT(*) FROM PC)/2, 
ROW_NUMBER() OVER (ORDER BY code)*2-1, 
ROW_NUMBER() OVER (ORDER BY code DESC)*2 
) num 
FROM 
PC 
UNION 
SELECT code, 'Printer' type, model,price, 
IIF(code<=(SELECT COUNT(*) FROM Printer)/2, 
ROW_NUMBER() OVER (ORDER BY code)*2-1, 
ROW_NUMBER() OVER (ORDER BY code DESC)*2 
) num 
FROM 
Printer 
) 
SELECT 
ROW_NUMBER() OVER(ORDER BY num, type), type, model, price 
FROM dsP

126.	WITH cte as (select [ID_psg], count(*) as ct, max(count(*)) over() as mct 
FROM [dbo].[Pass_in_trip] 
GROUP BY [ID_psg]), 
ctf as (select cte.*, [dbo].[Passenger].[name] from cte join [dbo].[Passenger] on [Passenger].[ID_psg] = [cte].[ID_psg] where ct = mct), 
ctg as (select row_number() over(order by [ID_psg]) as rn, count(*) over() as cr, [ID_psg], [name] from [dbo].[Passenger]) 
SELECT ctf.[name] as [psg], 
case when ctg.[rn] = 1 
then (select name from ctg ga where ga.[rn] = ctg.[cr]) 
else (select name from ctg ga where ga.[rn] = ctg.[rn] - 1) 
end as [prev], 
case when ctg.[rn] = ctg.[cr] 
then (select name from ctg ga where ga.[rn] = 1) 
else (select name from ctg ga where ga.[rn] = ctg.[rn] + 1) 
end as [next] 
FROM ctf join ctg on [ctg].[ID_psg] = [ctf].[ID_psg]


127.	WITH 
dsPCD AS 
(SELECT 
p.maker 
FROM 
PC,Product p 
WHERE 
p.model = PC.model and 
cast(replace(cd,'x','')as numeric) = (SELECT MIN(cast(replace(cd,'x','') as numeric)) FROM PC) 
), 
dsL AS 
(SELECT 
TOP 1 l.price 
FROM 
Laptop l, 
Product p 
WHERE 
p.model = l.model and 
p.maker in (SELECT maker FROM dsPCD) and 
l.price > 0 
ORDER BY l.price ), 
dsPPr AS 
(SELECT 
p.maker 
FROM 
Printer pr, 
Product p 
WHERE 
p.model = pr.model and 
pr.price = (SELECT MIN(price) FROM Printer) ), 
dsPC AS 
(SELECT TOP 1 PC.price 
FROM PC,Product p 
WHERE 
p.model = PC.model and 
p.maker in (SELECT maker FROM dsPPr) and 
PC.price > 0 
ORDER BY PC.price DESC ), 
dsPL AS 
(SELECT 
p.maker 
FROM Laptop l,Product p 
WHERE 
p.model=l.model and 
l.ram=(SELECT MAX(RAM) FROM lAPTOP) ), 
dsPr AS 
(SELECT 
TOP 1 pr.price 
FROM Printer pr,Product p 
WHERE 
p.model = pr.model and 
p.maker in (SELECT maker FROM dsPL) and 
pr.price > 0 
ORDER BY pr.price DESC ) 
SELECT 
cast(AVG(price) as NUMERIC(10,2)) 
FROM 
(SELECT price 
FROM dsL 
UNION ALL 
SELECT price 
FROM dsPC 
UNION ALL 
SELECT 
price 
FROM 
dsPr 
) dsPrices


128.	with cta as ( select [point], [date], sum(out) s
FROM outcome
WHERE [point] in (select point from [dbo].[Outcome_o])
GROUP BY [point], [date]),
ctb as (
SELECT [point], [date], sum(out) s
FROM outcome_o
WHERE [point] in (select point from [dbo].[Outcome])
GROUP by [point], [date]),
ctc as (select
coalesce([cta].[point], ctb.[point]) as point,
coalesce([cta].[date], [ctb].[date]) as [date],
coalesce([cta].[s], 0) as [sa],
coalesce([ctb].[s], 0) as [sb]
FROM cta full join ctb on [ctb].[date] = [cta].[date] and [ctb].[point] = [cta].[point])
SELECT
[ctc].[point],
[ctc].[date],
case
WHEN sa > sb then 'more than once a day'
WHEN sa < sb then 'once a day'
else 'both'
end lider
FROM ctc
ORDER by [ctc].[point],[ctc].[date]


129.	SELECT min(R1.VAL), max(R2.VAL)
FROM (
SELECT d.cur_val + 1 VAL
FROM (
SELECT a.Q_ID cur_val,
( 
SELECT min(c.Q_ID)
FROM utQ c
WHERE c.Q_ID > a.Q_ID
) next_val
FROM utQ a
) d
WHERE d.next_val - d.cur_val > 1
) R1,
(
SELECT d.cur_val - 1 VAL
FROM (
SELECT a.Q_ID cur_val,
( 
SELECT max(c.Q_ID)
FROM utQ c
WHERE c.Q_ID < a.Q_ID
) prev_val
FROM utQ a
) d
WHERE d.cur_val - d.prev_val > 1
) R2








130.	WITH 
dsB AS 
(SELECT ROW_NUMBER() OVER (ORDER BY DATE) number1, name, date, 
NTILE(2) OVER (ORDER BY DATE) group1 
FROM 
Battles b ), 
dsBN AS 
(SELECT *,ROW_NUMBER() OVER (PARTITION BY group1 ORDER BY DATE) number2 
FROM dsB 
) 
SELECT 
max(iif(group1 = 1, number1, null)), 
max(iif(group1 = 1, name, null)), 
max(iif(group1 = 1, date, null)), 
max(iif(group1 = 2, number1, null)), 
max(iif(group1 = 2, name, null)), 
max(iif(group1 = 2, date, null)) 
FROM 
dsBN 
GROUP BY 
number2

131.	WITH ctea as ( 
SELECT distinct town_from [town] from [dbo].[Trip] union select town_to from [dbo].[Trip]), cteb as (select 'a' s union all select 'e' union all select 'i' union all select 'o' union all select 'u'),ctec as ( 
SELECT [town], DATALENGTH([ctea].[town]) - DATALENGTH(replace([ctea].[town], s, '')) as cs 
FROM ctea, cteb), ctee as (select [town], [cs], count(*) over(partition by [ctec].[town]) cc, max(cs) over(partition by [ctec].[town]) mxc, min(cs) over(partition by [ctec].[town]) mnc 
FROM ctec where cs > 0) 
SELECT distinct town from ctee where cc > 1 and mxc = mnc

132.	WITH cte as (select [date] as date1, date2, 
datediff(month, [date], date2) - 
iif(datepart(day, date2) < datepart(day, [date]) and 
datepart(day, [date]) <= datepart(day,eomonth(date2)), 1, 0) as months 
FROM battles cross apply 
(SELECT coalesce(min(date),getdate()) date2 from battles b where b.date >battles.date) x) 
SELECT
case 
WHEN months/12>0 then cast(months/12 as varchar(4)) + 
case when months - months/12 *12 > 0 then ' y., ' else ' y.' end 
else '' end + 
case when months - months/12 *12 > 0 then cast(months - months/12 * 12 as varchar(2)) + ' m.' else '' end as age, 
convert(varchar(10), [date1], 127) as date1,convert(varchar(10), [date2], 127) as date2 
FROM cte


133.	SELECT [cmp].[ID_comp] [top_id], 
coalesce((select '' + cast([ID_comp] as varchar(max)) 
FROM [dbo].[Company] a where a.[ID_comp] < [cmp].[ID_comp] 
ORDER BY [a].[ID_comp] for xml path('')), '') + 
cast([cmp].[ID_comp] as varchar(max)) + 
coalesce((select '' + cast([ID_comp] as varchar(max)) 
FROM [dbo].[Company] a 
WHERE a.[ID_comp] < [cmp].[ID_comp] 
ORDER BY [a].[ID_comp] desc for xml path('')), '') [hill] 
FROM [dbo].[Company] cmp


134.	WITH 
dsNeed AS 
(SELECT q.Q_ID, q.col color,255-SUM(COALESCE(b.B_VOL,0)) need, SUM(255-SUM(COALESCE(b.B_VOL,0))) 
OVER (PARTITION BY q.col ORDER BY 
255-SUM(COALESCE(b.B_VOL,0)), q.Q_ID ) sum 
FROM (SELECT Q_ID, Col 
FROM (SELECT 
Q_ID 
FROM utQ 
) t1 
CROSS JOIN 
(SELECT 'R' Col 
UNION ALL 
SELECT 'G' UNION ALL 
SELECT 'B' 
) t2 
) q 
LEFT JOIN 
(SELECT 
v.V_COLOR, 
b.B_Q_ID, 
SUM(b.B_VOL) B_VOL 
FROM utB b,utV v 
WHERE v.V_ID = b.B_V_ID 
GROUP BY 
v.V_COLOR, 
b.B_Q_ID 
) b 
ON q.Q_ID = b.B_Q_ID AND b.V_COLOR = q.Col 
GROUP BY q.Q_ID, q.col 
), 
dsHas AS 
(SELECT 
v.V_COLOR color, 
COUNT(DISTINCT v.V_ID)*255 - SUM(COALESCE(b.B_VOL,0)) has 
FROM utV v 
LEFT JOIN utB b 
ON v.V_ID = b.B_V_ID 
GROUP BY 
v.V_COLOR 
) 
SELECT 
DISTINCT dsNeed.Q_ID 
FROM dsNeed,dsHas 
WHERE 
dsNeed.color = dsHas.color and 
dsNeed.sum > dsHas.has


135.	SELECT MAX(B_DATETIME) max_time 
FROM utB 
GROUP BY Dateadd(hh,datediff(hh,0,B_DATETIME), 0)

136.	SELECT name, PATINDEX('%[^a-z]%', name), 
SUBSTRING(name,PATINDEX('%[^a-z]%',name),1) 
FROM Ships 
WHERE PATINDEX('%[^a-z]%',name) > 0


137.	SELECT mo.type, CASE WHEN mo.type='pc' 
THEN AVG(p.price) WHEN mo.type = 'laptop' THEN AVG(lap.price) 
WHEN mo.type = 'printer' 
THEN AVG(prin.price) END avg_price 
FROM (SELECT prod.model, prod.type, prod.num 
FROM (SELECT row_number() over(ORDER BY model ASC) num, model, type 
FROM Product) prod 
GROUP BY prod.model, prod.type, prod.num HAVING num%5 = 0) mo 
LEFT JOIN Pc p ON mo.model = p.model 
LEFT JOIN Laptop lap ON mo.model = lap.model 
LEFT JOIN Printer prin ON mo.model = prin.model GROUP BY mo.num, mo.type




138.	WITH chopa as 
(SELECT Q_ID, STRING_AGG(V_ID,',') 
WITHIN GROUP (ORDER BY V_ID) V_ID_list 
FROM(SELECT DISTINCT Q_ID, V_ID 
FROM utQ q 
INNER JOIN utB b ON b.B_Q_ID = q.Q_ID 
INNER JOIN utV v On v.V_ID = b.B_V_ID 
GROUP BY Q_ID, V_ID) T GROUP BY Q_ID) 
SELECT cj.Q_ID,ocb.Q_ID 
FROM chopa cj 
INNER JOIN chopa ocb on cj.V_ID_list = ocb.V_ID_list AND cj.Q_ID<ocb.Q_ID


139.	WITH
dsShips AS
(SELECT name,
IIF(launched IS NULL,
(SELECT MIN(s_in.launched)
FROM Ships s_in
WHERE s.class = s_in.name and s_in.launched IS NOT NULL),
launched) launched_ship
FROM Ships s)
SELECT
dsShips.name,
STRING_AGG(b.name,',') WITHIN GROUP (ORDER BY b.date)
FROM
dsShips
LEFT JOIN Battles b
ON YEAR(b.date) < dsShips.launched_ship
WHERE
dsShips.name NOT IN (SELECT ship FROM Outcomes)
GROUP BY dsShips.name


140.	WITH trap AS ( 
SELECT years ,max_d 
FROM( 
SELECT date,cast(SUBSTRING(cast(YEAR(date) as varchar(4)),1,3) + '0' as int) as years, 
(SELECT MAX(years1) 
FROM (SELECT cast(SUBSTRING(cast(YEAR(date) as varchar(4)),1,3)+'0' as int) as years1 
FROM Battles)ts) as max_d 
FROM Battles) t 
GROUP BY years ,max_d 
UNION ALL 
SELECT years+10,max_d FROM trap 
WHERE years+10 < max_d)
SELECT years,battles FROM ( 
SELECT cast(years as varchar(4))+'s' as years,coalesce((SELECT COUNT(date) 
FROM Battles 
WHERE cast(SUBSTRING(cast(YEAR(date) as varchar(4)),1,3) + '0' as int) = years 
GROUP BY cast(SUBSTRING(cast(YEAR(date) as varchar(4)),1,3) + '0' as int)),0) as battles 
FROM trap) mt 
GROUP BY years,battles


141.	WITH 
dsPgs AS 
(SELECT p.ID_psg, 
IIF(DATEDIFF(DAY, min(date),'2003-04-01') > 0, 
'2003-04-01',min(date)) mindate, 
IIF(DATEDIFF(DAY, max(date), '2003-04-30') > 0, 
max(date),'2003-04-30') maxdate 
FROM 
Pass_in_trip p 
GROUP BY 
p.ID_psg) 
SELECT p.name, 
IIF(DATEDIFF(DAY, dsPgs.mindate, dsPgs.maxdate) + 1 < 0,0, 
DATEDIFF(DAY, dsPgs.mindate, dsPgs.maxdate) + 1 ) 
FROM dsPgs, Passenger p 
WHERE 
p.ID_psg=dsPgs.ID_psg


142.	WITH 
dsPsg AS 
(SELECT p.ID_psg 
FROM Pass_in_trip p 
INNER JOIN Trip t 
ON t.trip_no = p.trip_no 
GROUP BY p.ID_psg 
HAVING 
MAX(t.plane) = MIN(t.plane) AND COUNT(town_to) > COUNT(DISTINCT town_to) ) 
SELECT p.name 
FROM Passenger p 
WHERE p.ID_psg IN (SELECT dsPsg.ID_psg FROM dsPsg)


143.	SELECT [q].[name], convert(char(10), [q].[date],127) as [date],convert(char(10), DATEADD(DY,DATEDIFF(DY,'17530105',DATEADD(MM,DATEDIFF(MM,0,[q].[date]),30))/7*7,'17530105'), 127) as [fri] 
FROM [dbo].[Battles] [q]


144.	WITH min as (
SELECT Product.maker 
FROM Product 
JOIN PC on Product.model = PC.model 
WHERE price=(SELECT min(PC.price) FROM PC)), max as (
SELECT Product.maker 
FROM Product 
JOIN PC on Product.model = PC.model 
WHERE price=(
SELECT max(PC.price) 
FROM PC)) 
SELECT DISTINCT maker 
FROM Product 
WHERE Product.maker in (
SELECT maker FROM min) and Product.maker in 
(SELECT maker FROM max)


145.	SELECT ISNULL((SELECT SUM(out) 
FROM Outcome_o 
WHERE DATE >dt1 AND DATE <= dt2),0) qty, dt1, dt2 
FROM (
SELECT DATE dt1, LEAD(DATE) OVER (ORDER BY DATE) dt2 
FROM 
(SELECT DISTINCT DATE 
FROM Income_o) t ) TT 
WHERE dt2 IS NOT NULL



146.	SELECT CHARACTER, VALUE 
FROM (
SELECT cast (model AS VARCHAR(max)) AS model, cast (speed AS VARCHAR(max)) AS speed, cast (ram AS VARCHAR(max)) AS ram, cast (hd AS VARCHAR(max)) AS hd, cast (cd AS VARCHAR(max)) AS cd, cast (
ISNULL (CAST (price AS VARCHAR(MAX)) ,'') AS VARCHAR(MAX)) AS price FROM PC WHERE code IN (
SELECT MAX (code) FROM PC)) chartable 
UNPIVOT (VALUE FOR CHARACTER IN (model,speed,ram,hd,cd,price)) AS unpvt


147.	Select count(*) OVER (order by t1.numb DESC, t1.maker, t1.model) no, t1.maker, t1.model
From
(Select count (*) OVER (partition by maker) numb, maker, model
From Product) 
t1


148.	SSELECT ship,stuff(ship,charindex(' ',ship)+1,DATALENGTH(ship)-charindex(' ',reverse(ship))-charindex(' ',ship),replicate('*',DATALENGTH(ship)-charindex(' ',reverse(ship))-charindex(' ',ship))) as new_name
FROM outcomes
WHERE charindex(' ',ship)< DATALENGTH(ship)-charindex(' ',reverse(ship))+1 and charindex(' ',ship) > 0


149.	WITH TT AS ( 
SELECT V_NAME, MIN(B_DATETIME) as ft 
FROM utV v INNER JOIN utB b on b.B_V_ID = v.V_ID 
GROUP BY V_NAME) 
SELECT V_NAME FROM ( 
SELECT V_ID, V_NAME 
FROM utB b INNER JOIN utV v ON v.V_ID = b.B_V_ID 
WHERE b.B_DATETIME = (select max(ft) FROM TT) 
GROUP BY V_ID, V_NAME) tt
